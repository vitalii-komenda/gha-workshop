name: Github Action Workflow

on: [push]

env:
    SESSION_NAME: "GHA workshop"
    PARTICIPANT_COUNT: "5"
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{github.repository}}

jobs:
    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:15-alpine
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: keyboardcat
                    POSTGRES_DB: tasks
                options: >-
                    --health-cmd pg_isready
                    --health-interval 3s
                    --health-timeout 15s
                    --health-retries 5
                ports:
                    - 5432:5432
        steps:
          - uses: "actions/checkout@v3"
          - name: Setup python
            uses: "actions/setup-python@v4"
            with:
                python-version: "3.11"
          - name: Install deps
            run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
          - name: Run tests
            run: |
                python -m unittest discover -s tests -p 'test_*.py'
    build-and-push:
        needs: test
        runs-on: ubuntu-latest
        permissions:
            contents: "read"
            id-token: "write"
            packages: "write"
        steps:
            - uses: "actions/checkout@v3"
            - name: Auth to ghcr
              uses: "docker/login-action@v2"
              with:
                registry: ${{env.REGISTRY}}
                username: ${{github.actor}}
                password: ${{secrets.GITHUB_TOKEN}}
            - name: Extract metadata
              id: meta
              uses: "docker/metadata-action@v3"
              with:
                images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
            - name: Build and push
              uses: "docker/build-push-action@v4"
              with:
                context: .
                push: true
                tags: ${{steps.meta.outputs.tags}}
                labels: ${{steps.meta.outputs.labels}}
    send-note:
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
            - name: Push a notification
              id: slack
              uses: "slackapi/slack-github-action@v1.24.0"
              with:
                channel-id: "C05T5LEMWCQ"
                payload: |
                    {
                        "text": "User ${{github.actor}} has completed workshop."
                    }
              env:
                SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}